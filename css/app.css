@import 'https://fonts.googleapis.com/css?family=Roboto+Mono:300,400,500,700';
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
.clearfix {
  zoom: 1;
}
.clearfix:before {
  content: '';
  display: block;
}
.clearfix:after {
  content: '';
  display: table;
  clear: both;
}
.vcenter-parent:before {
  content: '';
  display: inline-block;
  width: 1px;
  height: 100%;
  vertical-align: middle;
}
.vcenter {
  display: inline-block;
  vertical-align: middle;
}
.inner {
  padding-left: 15%;
  padding-right: 15%;
}
@font-face {
  font-family: 'arcui';
  src: url('../fonts/arcui.ttf?rqthlh') format('truetype'), url('../fonts/arcui.woff?rqthlh') format('woff'), url('../fonts/arcui.svg?rqthlh#arcui') format('svg');
  font-weight: normal;
  font-style: normal;
}
.icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.icon-search:before {
  content: "\e900";
}
.icon-minux:before {
  content: "\e901";
}
.icon-plus:before {
  content: "\e902";
}
.icon-menu:before {
  content: "\e903";
}
.icon-tick:before {
  content: "\e904";
}
.icon-star:before {
  content: "\e905";
}
.icon-heart:before {
  content: "\e906";
}
.icon-cross:before {
  content: "\e907";
}
.icon-arrow-left:before {
  content: "\e908";
}
.icon-arrow-right:before {
  content: "\e909";
}
body {
  overflow-x: hidden;
  font-family: 'Roboto Mono', monospace;
  background-color: white;
  color: #424242;
  font-size: 13px;
  font-weight: 300;
  line-height: 20px;
  text-align: center;
}
body *,
body *:before,
body *:after {
  box-sizing: border-box;
}
body a {
  color: inherit;
  text-decoration: none;
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}
body img {
  display: block;
  width: 100%;
  height: auto;
}
body.lock {
  overflow-y: hidden;
}
#toggle {
  position: fixed;
  bottom: 10px;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  z-index: 1000;
  padding: 3px 10px;
  margin: 0;
  border: none;
  outline: none;
  background: black;
  text-transform: uppercase;
  font-size: 16px;
  font-weight: bold;
  color: white;
  display: none;
}
#toggle.active {
  background: #ff4081;
}
#ref {
  width: 100%;
  height: 13000px;
  position: absolute;
  top: -721px;
  left: 0;
  right: 0;
  z-index: 999;
  pointer-events: none;
  background: url('../images/arcui-small.png') no-repeat center top;
  background-size: contain;
  opacity: 0.5;
  display: none;
}
#ref.active {
  display: block;
}
#shadow {
  width: 240px;
  height: 240px;
  border-radius: 50%;
  box-shadow: 0 0 50px black;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 600;
  pointer-events: none;
  opacity: .7;
  display: none;
}
#top {
  padding: 5%;
  background: #3f50b0;
}
#top h1 {
  display: none;
}
#bottom {
  background: #3f50b0;
  height: 240px;
  color: white;
  padding: 65px;
}
#bottom a {
  display: inline-block;
  width: 60px;
  height: 60px;
  background: url("../images/github.svg") no-repeat center center;
  text-indent: -9999px;
  margin-bottom: 25px;
}
#bottom h2 {
  padding: 0;
}
.section {
  padding: 60px 0 60px;
  margin-bottom: 1px;
}
.section .section-title {
  height: 80px;
  text-align: center;
}
.section .section-title span {
  display: block;
  width: 120px;
  margin: 0 auto;
  font-size: 15px;
  font-weight: bold;
  line-height: 32px;
  text-transform: uppercase;
  letter-spacing: 1pt;
  border-bottom: 1px solid #b0b0b0;
}
h1.big-title {
  font-size: 30px;
  font-weight: bold;
  line-height: 36px;
  color: inherit;
  text-transform: uppercase;
  padding-bottom: 20px;
}
h2.sub-title {
  font-size: 24px;
  font-weight: bold;
  line-height: 28px;
  color: inherit;
  text-transform: uppercase;
  padding-bottom: 20px;
}
h3.item-title {
  font-size: 15px;
  font-weight: bold;
  line-height: 17.5px;
  color: inherit;
  text-transform: uppercase;
  letter-spacing: 1px;
  padding-bottom: 10px;
}
p.paragraph em {
  font-weight: bold;
}
p.paragraph a {
  font-weight: 500;
  color: #ff4081;
  text-decoration: underline;
}
.btn,
input[type='button'],
input[type='submit'] {
  display: block;
  width: 100%;
  height: 50px;
  border: none;
  outline: none;
  font-size: 16px;
  font-weight: bold;
  line-height: 50px;
  color: white;
  border-radius: 25px;
  background: #3f50b0;
}
.btn:not(:last-child),
input[type='button']:not(:last-child),
input[type='submit']:not(:last-child) {
  margin-bottom: 20px;
}
.btn:hover,
input[type='button']:hover,
input[type='submit']:hover {
  background: #9fa8da;
}
.btn.red,
input[type='button'].red,
input[type='submit'].red {
  background: #ff4081;
}
.btn.red:hover,
input[type='button'].red:hover,
input[type='submit'].red:hover {
  background: #ff80ab;
}
.btn-small {
  display: inline-block;
  width: 50px;
  height: 50px;
  border: none;
  outline: none;
  font-size: 0px;
  border-radius: 50%;
  vertical-align: text-top;
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: #3f50b0;
}
.btn-small:hover {
  background: #9fa8da;
}
.btn-small:before {
  font-size: 20px;
  line-height: 50px;
  color: white;
}
.btn-small.search:before {
  content: "\e900";
}
.btn-small.star:before {
  content: "\e905";
}
.btn-small.heart:before {
  content: "\e906";
}
.btn-small.red {
  background: #ff4081;
}
.btn-small.red:hover {
  background: #ff80ab;
}
.btn-small.disabled,
.btn-small[disabled] {
  background: #b0b0b0;
}
.btn-small.yes {
  background: #ff4081;
}
.btn-small.yes:before {
  content: "\e904";
}
.btn-small.yes:hover {
  background: #ff80ab;
}
.btn-small.no {
  background: white;
}
.btn-small.no:before {
  content: "\e907";
}
.btn-small.no:before {
  color: #424242;
}
.image {
  height: 100vw;
  padding: 10px;
}
.image:not(:last-child) {
  margin-bottom: 15px;
}
.image .image-wrapper {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  overflow: hidden;
  position: relative;
}
.image .image-wrapper .image-title {
  width: 100%;
  height: 40px;
  background: rgba(0, 0, 0, 0.7);
  text-align: left;
  color: white;
  font-size: 13px;
  font-weight: normal;
  line-height: 40px;
  text-align: center;
  position: absolute;
  left: 0;
  bottom: 10px;
}
form input {
  font: inherit;
  line-height: inherit;
  color: inherit;
}
form label {
  display: block;
  padding-bottom: 10px;
}
form input[type='text'],
form input[type='email'],
form input[type='password'] {
  text-align: center;
  display: block;
  width: 100%;
  border: none;
  outline: none;
  margin: 0;
  border-bottom: 1px solid #9fa8da;
  line-height: 34px;
  margin-bottom: 12px;
}
form input[type='text']:focus,
form input[type='email']:focus,
form input[type='password']:focus {
  font-weight: bold;
  border-bottom-color: #3f50b0;
}
form fieldset {
  padding: 15px 0;
}
form input[type='checkbox'] {
  visibility: hidden;
  position: absolute;
}
form input[type='checkbox'] + span:before {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle;
  display: inline-block;
  width: 30px;
  height: 30px;
  background: #9fa8da;
  font-size: 16px;
  line-height: 30px;
  text-align: center;
  border-radius: 5px;
  color: white;
  content: " ";
  margin-right: 10px;
}
form input[type='checkbox']:checked + span {
  font-weight: bold;
}
form input[type='checkbox']:checked + span:before {
  content: "\e904";
}
form input[type='checkbox']:checked + span:before {
  background: #3f50b0;
}
form input[type='radio'] {
  visibility: hidden;
  position: absolute;
}
form input[type='radio'] + span:before {
  vertical-align: middle;
  display: inline-block;
  width: 30px;
  height: 30px;
  background: #9fa8da;
  font-size: 16px;
  line-height: 30px;
  text-align: center;
  border-radius: 50%;
  color: white;
  content: " ";
  margin-right: 10px;
}
form input[type='radio']:checked + span {
  font-weight: bold;
}
form input[type='radio']:checked + span:before {
  border: 8px solid #3f50b0;
  background: white;
}
#colors .color {
  height: 80px;
  position: relative;
}
#colors .color p {
  font-size: 12px;
  font-weight: 700;
  line-height: 15px;
  text-align: center;
  color: white;
  letter-spacing: 1pt;
  text-transform: uppercase;
  width: 100%;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
#colors #color-indigo {
  background: #3f50b0;
}
#colors #color-indigo-light {
  background: #9fa8da;
}
#colors #color-pink {
  background: #ff4081;
}
#colors #color-pink-light {
  background: #ff80ab;
}
#colors #color-text1 {
  background: #424242;
}
#colors #color-grey1 {
  background: #dbdbdb;
}
#colors #color-grey1 p {
  color: #424242;
}
#colors #color-text2 {
  background: #b0b0b0;
}
#colors #color-grey2 {
  background: #fafafa;
}
#colors #color-grey2 p {
  color: #424242;
}
#typography .content {
  padding-left: 15%;
  padding-right: 15%;
}
#typography .content p.paragraph {
  padding-top: 30px;
}
#buttons .content {
  padding-left: 15%;
  padding-right: 15%;
}
#form .content {
  padding-left: 15%;
  padding-right: 15%;
}
#image .content {
  margin-top: -10px;
}
#navigation nav {
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  border: 10px solid rgba(255, 255, 255, 0);
  border-radius: 50%;
  position: relative;
  overflow: hidden;
  -webkit-transform: translateX(-200px);
  -moz-transform: translateX(-200px);
  -o-transform: translateX(-200px);
  -ms-transform: translateX(-200px);
  transform: translateX(-200px);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 5;
  height: 100vw;
  width: 100vw;
  opacity: 0;
  pointer-events: none;
}
#navigation nav.show {
  opacity: 1;
  pointer-events: auto;
}
#navigation nav #nav-toggle {
  display: block;
  position: absolute;
  top: 50%;
  right: 5px;
  margin-top: -10px;
  width: 20px;
  height: 20px;
  color: white;
  text-align: center;
  font-size: 18px;
  line-height: 20px;
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  cursor: poiner;
}
#navigation nav #nav-toggle:before {
  content: "\e903";
}
#navigation nav menu {
  width: 100%;
  height: 100%;
  background: #3f50b0;
}
#navigation nav menu:before {
  content: '';
  display: inline-block;
  width: 1px;
  height: 100%;
  vertical-align: middle;
}
#navigation nav menu ul {
  display: inline-block;
  vertical-align: middle;
}
#navigation nav menu li a {
  font-size: 16px;
  font-weight: 400;
  line-height: 24px;
  text-transform: uppercase;
  color: white;
}
#navigation nav menu li:not(:last-child) {
  padding-bottom: 15px;
}
#navigation nav menu li.active a {
  font-size: 18px;
  font-weight: bold;
  text-decoration: underline;
}
#navigation nav.active {
  -webkit-transform: translateX(0);
  -moz-transform: translateX(0);
  -o-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}
#navigation nav.active #nav-toggle:before {
  content: "\e907";
}
#navigation .content {
  position: relative;
  padding-top: 130px;
}
#navigation .sub-title {
  position: absolute;
  top: 50px;
  width: 100%;
  padding: 0;
  padding-left: 40px;
  text-align: left;
}
#navigation .sub-title:before {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding-right: 5px;
}
#navigation .sub-title:before {
  content: "\e908";
}
#accordion .arc-accordion > ul li {
  background: #3f50b0;
  overflow: hidden;
  position: relative;
  padding: 0 35px;
}
#accordion .arc-accordion > ul li:not(:last-child) {
  border-bottom: 1px solid white;
}
#accordion .arc-accordion > ul li span,
#accordion .arc-accordion > ul li a {
  display: block;
  height: 38px;
  font-size: 16px;
  line-height: 37px;
  color: white;
  text-transform: uppercase;
  white-space: nowrap;
}
#accordion .arc-accordion > ul li ul {
  height: 0;
}
#accordion .arc-accordion > ul li ul li {
  background: #9fa8da;
}
#accordion .arc-accordion > ul li ul li:first-child {
  border-top: 1px solid white;
}
#accordion .arc-accordion > ul li ul li span,
#accordion .arc-accordion > ul li ul li a {
  font-size: 14.5px;
}
#accordion .arc-accordion > ul > li:before {
  content: "\e902";
}
#accordion .arc-accordion > ul > li:before {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: white;
  position: absolute;
  left: 45px;
  top: 0;
  line-height: 37px;
}
#accordion .arc-accordion > ul > li.active:before {
  content: "\e901";
}
#accordion .arc-accordion .arc-accordion-title {
  width: 35px;
  height: 100vw;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 5;
  background: white;
  text-align: center;
  overflow: hidden;
  -webkit-transform: translateX(-100%);
  -moz-transform: translateX(-100%);
  -o-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  transform: translateX(-100%);
}
#accordion .arc-accordion .arc-accordion-title span {
  display: block;
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  color: #424242;
  -webkit-transform: translate(-50%, -50%) rotate(-90deg);
  -moz-transform: translate(-50%, -50%) rotate(-90deg);
  -o-transform: translate(-50%, -50%) rotate(-90deg);
  -ms-transform: translate(-50%, -50%) rotate(-90deg);
  transform: translate(-50%, -50%) rotate(-90deg);
  font-size: 16px;
  line-height: 22px;
  font-weight: 500;
  text-transform: uppercase;
}
#accordion .arc-accordion .arc-accordion-close {
  width: 35px;
  height: 100vw;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 5;
  background: #ff4081;
  color: white;
  overflow: hidden;
  -webkit-transform: translateX(100%);
  -moz-transform: translateX(100%);
  -o-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}
#accordion .arc-accordion .arc-accordion-close:before {
  content: "\e907";
}
#accordion .arc-accordion .arc-accordion-close:before {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'arcui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
#accordion .arc-accordion .arc-accordion-bar {
  opacity: 0;
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}
#accordion .arc-accordion.show .arc-accordion-bar {
  opacity: 1;
}
#accordion .arc-accordion.active .arc-accordion-bar {
  -webkit-transform: translateX(0);
  -moz-transform: translateX(0);
  -o-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}
#modal .content {
  padding-left: 15%;
  padding-right: 15%;
}
#modal .content #popup {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.5);
  z-index: 500;
  padding: 10px;
  display: none;
  opacity: 0;
}
#modal .content #popup #popup-wrapper {
  background: #3f50b0;
  border-radius: 50%;
  width: calc(100vw - 20px);
  height: calc(100vw - 20px);
  text-align: center;
  padding: 35px;
}
#modal .content #popup #popup-wrapper h2 {
  color: white;
}
#tabs .content {
  position: relative;
}
#tabs #tabs-content {
  position: absolute;
  width: 192px;
  height: 192px;
  background: #3f50b0;
  color: white;
  border-radius: 50%;
  top: 24px;
  left: 24px;
  padding: 24px 35px;
  overflow-y: auto;
}
#tabs #tabs-content div {
  display: none;
}
#tabs #tabs-content div.active {
  display: block;
}
#tabs svg path {
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -o-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
}
#tabs svg #round1 {
  -webkit-transform: rotate(90deg);
  -moz-transform: rotate(90deg);
  -o-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}
#tabs svg #round2 {
  -webkit-transform: rotate(162deg);
  -moz-transform: rotate(162deg);
  -o-transform: rotate(162deg);
  -ms-transform: rotate(162deg);
  transform: rotate(162deg);
}
#tabs svg #round3 {
  -webkit-transform: rotate(234deg);
  -moz-transform: rotate(234deg);
  -o-transform: rotate(234deg);
  -ms-transform: rotate(234deg);
  transform: rotate(234deg);
}
#tabs svg #round4 {
  -webkit-transform: rotate(306deg);
  -moz-transform: rotate(306deg);
  -o-transform: rotate(306deg);
  -ms-transform: rotate(306deg);
  transform: rotate(306deg);
}
#tabs svg #round5 {
  -webkit-transform: rotate(378deg);
  -moz-transform: rotate(378deg);
  -o-transform: rotate(378deg);
  -ms-transform: rotate(378deg);
  transform: rotate(378deg);
}
#tabs svg textPath {
  baseline-shift: 7px;
}
#tabs svg text {
  font-size: 14.5px;
  font-weight: bold;
  line-height: 20px;
  fill: #b0b0b0;
}
#tabs svg .line {
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  opacity: 0;
}
#tabs svg g.active .line {
  opacity: 1;
}
#tabs svg g.active text {
  fill: #ff4081;
}
#slideshow .content {
  width: 100%;
  overflow: hidden;
}
#slideshow .content .swiper-container {
  width: 192px;
  height: 192px;
  overflow: visible;
}
#slideshow .content .swiper-slide {
  background: #3f50b0;
  border-radius: 50%;
  opacity: .5;
  -webkit-transition: opacity 0.4s;
  -moz-transition: opacity 0.4s;
  -o-transition: opacity 0.4s;
  transition: opacity 0.4s;
}
#slideshow .content .swiper-slide:before {
  content: '';
  display: inline-block;
  width: 1px;
  height: 100%;
  vertical-align: middle;
}
#slideshow .content .swiper-slide h2 {
  color: white;
  display: inline-block;
  vertical-align: middle;
  padding: 0;
}
#slideshow .content .swiper-slide-active {
  opacity: 1;
}
#slideshow .content .swiper-pagination {
  bottom: 15px;
}
#slideshow .content .swiper-pagination .swiper-pagination-bullet {
  width: 6px;
  height: 6px;
  background: white;
  margin: 0 3px;
}

/*# sourceMappingURL=data:application/json;base64, */
